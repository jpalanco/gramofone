Index: u-boot-2006-04-06-1725/common/main.c
===================================================================
--- u-boot-2006-04-06-1725.orig/common/main.c
+++ u-boot-2006-04-06-1725/common/main.c
@@ -42,6 +42,7 @@
 DECLARE_GLOBAL_DATA_PTR;
 #endif
 
+extern int max_error;
 extern int reset_button_pressed(void);
 extern void flash_led(int i);
 
@@ -55,6 +56,7 @@ extern int do_reset (cmd_tbl_t *cmdtp, i
 
 extern int do_bootd (cmd_tbl_t *cmdtp, int flag, int argc, char *argv[]);
 
+extern unsigned char *fon_lock_addr_loc(void);
 
 #define MAX_DELAY_STOP_STR 32
 
@@ -442,12 +444,26 @@ void main_loop (void)
 # ifdef CONFIG_AUTOBOOT_KEYED
 		int prev = disable_ctrlc(1);	/* disable Control C checking */
 # endif
+	u32 *lock = ((void*) fon_lock_addr_loc());
+	u32 *magic1 = ((void*) 0xa0e00000);
+	u32 *magic2 = ((void*) 0xa0d00000);
+	int magic;
+
+	magic = (*magic1 == 0xdeadbeef) &&
+		(*magic2 == 0xdeadbeef);
+	*magic1 = *magic2 = 0x0;
 
-	if (reset_button_pressed()) {
+	if (magic || reset_button_pressed()) {
 		flash_led(0);
 		run_command ("http", 0);
 	}
 
+	if (*lock != 0x4c4c4c4c) {
+		setenv("bootargs", "mtd.unlock=1");
+		max_error = 3;
+		run_command("tftp 0x81000000 fon2415.mfg; bootm 0x81000000", 0);
+	}
+
 # ifndef CFG_HUSH_PARSER
 		run_command (s, 0);
 # else
Index: u-boot-2006-04-06-1725/include/configs/db12x.h
===================================================================
--- u-boot-2006-04-06-1725.orig/include/configs/db12x.h
+++ u-boot-2006-04-06-1725/include/configs/db12x.h
@@ -13,9 +13,12 @@
 
 #include <configs/ar7240.h>
 
+#define CONFIG_MAX_FLASH	0x3D0000
+
 #ifndef FLASH_SIZE
 #define FLASH_SIZE		8
 #endif
+
 /*-----------------------------------------------------------------------
  * FLASH and environment organization
  */
Index: u-boot-2006-04-06-1725/net/rsa/bigint.c
===================================================================
--- u-boot-2006-04-06-1725.orig/net/rsa/bigint.c
+++ u-boot-2006-04-06-1725/net/rsa/bigint.c
@@ -58,6 +58,40 @@ static bigint *alloc(BI_CTX *ctx, int si
 static bigint *trim(bigint *bi);
 static void more_comps(bigint *bi, int n);
 
+uint32_t __div64_32(uint64_t *n, uint32_t base)
+{
+	uint64_t rem = *n;
+	uint64_t b = base;
+	uint64_t res, d = 1;
+	uint32_t high = rem >> 32;
+
+	/* Reduce the thing a bit first */
+	res = 0;
+	if (high >= base) {
+		high /= base;
+		res = (uint64_t) high << 32;
+		rem -= (uint64_t) (high*base) << 32;
+	}
+
+	while ((int64_t)b > 0 && b < rem) {
+		b = b+b;
+		d = d+d;
+	}
+
+	do {
+		if (rem >= b) {
+			rem -= b;
+			res += d;
+		}
+		b >>= 1;
+		d >>= 1;
+	} while (d);
+
+	*n = res;
+	return rem;
+}
+
+
 /**
  * @brief Start a new bigint context.
  * @return A bigint context.
Index: u-boot-2006-04-06-1725/net/rsa/div64.h
===================================================================
--- u-boot-2006-04-06-1725.orig/net/rsa/div64.h
+++ u-boot-2006-04-06-1725/net/rsa/div64.h
@@ -40,7 +40,7 @@ extern uint32_t __div64_32(uint64_t *div
 	uint32_t __base = (base);			\
 	uint32_t __rem;					\
 	(void)(((typeof((n)) *)0) == ((uint64_t *)0));	\
-	if (likely(((n) >> 32) == 0)) {			\
+	if (((n) >> 32) == 0) {			\
 		__rem = (uint32_t)(n) % __base;		\
 		(n) = (uint32_t)(n) / __base;		\
 	} else 						\
Index: u-boot-2006-04-06-1725/net/rsa/rsa.c
===================================================================
--- u-boot-2006-04-06-1725.orig/net/rsa/rsa.c
+++ u-boot-2006-04-06-1725/net/rsa/rsa.c
@@ -132,19 +132,29 @@ static DER_key *CH_load_pem_key(void)
 	char key[1024];
 	size_t filesize;
 	int size;
-
+	int i;
+		printf("%s:%s[%d]\n", __FILE__, __func__, __LINE__);
 	if ((ret = (DER_key *)malloc(sizeof(DER_key))) == NULL)
 		return NULL;
 	buffer = public_key;
+for (i = 0; i < 64; i++)
+{
+	printf("%c", public_key[i]);
+}
+	printf("\n%s:%s[%d]\n", __FILE__, __func__, __LINE__);
+
 	p = (char *)buffer;
+		printf("%s:%s[%d]\n", __FILE__, __func__, __LINE__);
 	while ((*p != '\n') && (*p != '\0'))
 		p++;
 	if (*p == '\0') {
 		free(ret);
 		return NULL;
 	}
+		printf("%s:%s[%d]\n", __FILE__, __func__, __LINE__);
 	p++;
 	b64 = t = p;
+		printf("%s:%s[%d]\n", __FILE__, __func__, __LINE__);
 	while((p - b64) <= filesize) {
 		if ((*p == '-')) {
 			break;
@@ -155,8 +165,10 @@ static DER_key *CH_load_pem_key(void)
 		p++;
 	}
 	*t = '\0';
+		printf("%s:%s[%d]\n", __FILE__, __func__, __LINE__);
 	size = B64_decode(b64, key, strlen(b64), 1024);
 	if (size < 0) {
+		printf("%s:%s[%d]\n", __FILE__, __func__, __LINE__);
 		free(buffer);
 		free(ret);
 		return NULL;
@@ -165,6 +177,11 @@ static DER_key *CH_load_pem_key(void)
 	ret->buffer = (char *)malloc(size);
 	ret->size = size;
 	memcpy((void *)ret->buffer, (void *)key, size);
+	for (i = 0; i < ret->size; i++)
+{
+	printf("%02x ", ret->buffer[i]);
+}
+	printf("\n%s:%s[%d]\n", __FILE__, __func__, __LINE__);
 	return ret;
 }
 
@@ -197,20 +214,30 @@ static int asn1_get_public_key(const uin
 {
 	uint8_t *modulus, *pub_exp;
 	int mod_len, pub_len;
+	int i;
 
 	pub_len = 3;
 	mod_len = len - 37;
+	printf("%s:%s[%d]%d\n", __FILE__, __func__, __LINE__, len);
+	for(i = 0; i < len; i++) {
+		printf("%02x ", buf[i]);
+	}
+
+
 	if (buf[0] != 0x30) {
 		return -1;
 	}
 
+	printf("\n%s:%s[%d]\n", __FILE__, __func__, __LINE__);
 	pub_exp = (uint8_t *)malloc(3);
 	modulus = (uint8_t *)malloc(mod_len);
 	memcpy(modulus, buf + 32 , mod_len);
 	memcpy(pub_exp, buf + 34 + mod_len, 3); 
 	if (mod_len <= 0 || pub_len <= 0 )
 		return -1;
+	printf("%s:%s[%d]\n", __FILE__, __func__, __LINE__);
 	CH_pub_key_new(rsa_parameters, modulus, mod_len, pub_exp, pub_len);
+	printf("%s:%s[%d]\n", __FILE__, __func__, __LINE__);
 
 	free(modulus);
 	free(pub_exp);
Index: u-boot-2006-04-06-1725/net/tftp.c
===================================================================
--- u-boot-2006-04-06-1725.orig/net/tftp.c
+++ u-boot-2006-04-06-1725/net/tftp.c
@@ -17,7 +17,7 @@
 #define WELL_KNOWN_PORT	69		/* Well known TFTP port #		*/
 #define TIMEOUT		5		/* Seconds to timeout for a lost pkt	*/
 #ifndef	CONFIG_NET_RETRY_COUNT
-# define TIMEOUT_COUNT	10		/* # of timeouts before giving up  */
+# define TIMEOUT_COUNT	3		/* # of timeouts before giving up  */
 #else
 # define TIMEOUT_COUNT  (CONFIG_NET_RETRY_COUNT * 2)
 #endif
@@ -95,6 +95,9 @@ store_block (unsigned block, uchar * src
 		NetBootFileXferSize = newsize;
 }
 
+int max_error = -1;
+static int error_cnt;
+
 static void TftpSend (void);
 static void TftpTimeout (void);
 
@@ -290,7 +293,12 @@ TftpHandler (uchar * pkt, unsigned dest,
 		printf ("\nTFTP error: '%s' (%d)\n",
 					pkt + 2, ntohs(*(ushort *)pkt));
 		puts ("Starting again\n\n");
+		if ((max_error > 0) && (error_cnt >= max_error )) {
+			run_command("run bootcmd", 0);
+			run_command("reset", 0);
+		}
 		NetStartAgain ();
+		error_cnt++;
 		break;
 	}
 }
@@ -300,6 +308,11 @@ static void
 TftpTimeout (void)
 {
 	if (++TftpTimeoutCount > TIMEOUT_COUNT) {
+		if ((max_error > 0) && (error_cnt >= max_error )) {
+			run_command("run bootcmd", 0);
+			run_command("reset", 0);
+		}
+		error_cnt++;
 		puts ("\nRetry count exceeded; starting again\n");
 		NetStartAgain ();
 	} else {
--- a/net/uip-0.9/fsdata.c
+++ b/net/uip-0.9/fsdata.c
@@ -1,17 +1,55 @@
+static const char data_unlock_html[] =
+"HTTP/1.0 200 OK\n"
+"Server: uIP/0.9 (http://dunkels.com/adam/uip/)\n"
+"Content-type: text/html\n"
+"\n"
+"<html>\n"
+"<head>\n"
+"\t<title>Fonera Failsafe UI</title>\n"
+"\t<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"main.css\"/>\n"
+"</head>\n"
+"<body>\n"
+"\t<div class=\"wrap\">\n"
+"\t\t<h1>Fonera Failsafe UI</h1>\n"
+"\t\t<h2>System unlocked</h2>\n"
+"\t</div>\n"
+"</body>\n"
+"</html>\n";
+
+static const char data_lock_html[] =
+"HTTP/1.0 200 OK\n"
+"Server: uIP/0.9 (http://dunkels.com/adam/uip/)\n"
+"Content-type: text/html\n"
+"\n"
+"<html>\n"
+"<head>\n"
+"\t<title>Fonera Failsafe UI</title>\n"
+"\t<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"main.css\"/>\n"
+"</head>\n"
+"<body>\n"
+"\t<div class=\"wrap\">\n"
+"\t\t<h1>Fonera Failsafe UI</h1>\n"
+"\t\t<h2>System locked</h2>\n"
+"\t</div>\n"
+"</body>\n"
+"</html>\n";
+
 static const char data_flashing_html[] =
 "HTTP/1.0 200 OK\n"
 "Server: uIP/0.9 (http://dunkels.com/adam/uip/)\n"
 "Content-type: text/html\n"
 "\n"
 "<html>\n"
-"\t<head>\n"
-"\t\t<title>\n"
-"\t\t\tFonera Failsafe UI\n"
-"\t\t</title>\n"
-"\t</head>\n"
-"\t<body style=\"margin: 0pt auto; height:100%; color: #000; background-color: #fbb034;\">\n"
-"\t\t<center><h1>Upgrading system...</h1></center>\n"
-"\t</body style=\"margin: 0pt auto; height:100%; color: #000; background-color: #fbb034;\">\n"
+"<head>\n"
+"\t<title>Fonera Failsafe UI</title>\n"
+"\t<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"main.css\"/>\n"
+"</head>\n"
+"<body>\n"
+"\t<div class=\"wrap\">\n"
+"\t\t<h1>Fonera Failsafe UI</h1>\n"
+"\t\t<h2>Upgrading system...</h2>\n"
+"\t</div>\n"
+"</body>\n"
 "</html>\n";
 
 static const char data_fail_html[] =
@@ -20,32 +58,56 @@ static const char data_fail_html[] =
 "Content-type: text/html\n"
 "\n"
 "<html>\n"
-"\t<head>\n"
-"\t\t<title>\n"
-"\t\t\tFonera Failsafe UI\n"
-"\t\t</title>\n"
-"\t</head>\n"
-"\t<body style=\"margin: 0pt auto; height:100%; color: #000; background-color: #fbb034;\">\n"
-"\t\t<h1>Flashing failed</h1>\n"
+"<head>\n"
+"\t<title>Fonera Failsafe UI</title>\n"
+"\t<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"main.css\"/>\n"
+"</head>\n"
+"<body>\n"
+"\t<div class=\"wrap\">\n"
+"\t\t<h1>Fonera Failsafe UI</h1>\n"
+"\t\t<h2>Flashing failed</h2>\n"
 "\t\tERROR - the image you uploaded failed to pass verification.<br>\n"
 "\t\tPlease make sure to use an official update provided by http://lantiq.com/\n"
-"\t</body style=\"margin: 0pt auto; height:100%; color: #000; background-color: #fbb034;\">\n"
+"\t</div>\n"
+"</body>\n"
+"</html>\n";
+
+static const char data_flash_html[] =
+"HTTP/1.0 200 OK\n"
+"Server: uIP/0.9 (http://dunkels.com/adam/uip/)\n"
+"Content-type: text/html\n"
+"\n"
+"<html>\n"
+"<head>\n"
+"\t<title>Fonera Failsafe UI</title>\n"
+"\t<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"main.css\"/>\n"
+"</head>\n"
+"<body>\n"
+"\t<div class=\"wrap\">\n"
+"\t\t<h1>Fonera Failsafe UI</h1>\n"
+"\t\t<h2>Flashing...</h2>\n"
+"\t\tThe system is now trying to flash. If there is a problem, the LEDs will "
+"start to blink.<br>\n"
+"\t</div>\n"
+"</body>\n"
 "</html>\n";
 
 static const char data_404_html[] =
-"HTTP/1.0 404 File not found\n"
+"HTTP/1.0 200 OK\n"
 "Server: uIP/0.9 (http://dunkels.com/adam/uip/)\n"
 "Content-type: text/html\n"
 "\n"
 "<html>\n"
-"\t<head>\n"
-"\t\t<title>\n"
-"\t\t\tFonera Failsafe UI\n"
-"\t\t</title>\n"
-"\t</head>\n"
-"\t<body style=\"margin: 0pt auto; height:100%; color: #000; background-color: #fbb034;\">\n"
-"\t\t<center><h1>404 - file not found</h1></center>\n"
-"\t</body style=\"margin: 0pt auto; height:100%; color: #000; background-color: #fbb034;\">\n"
+"<head>\n"
+"\t<title>Fonera Failsafe UI</title>\n"
+"\t<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"main.css\"/>\n"
+"</head>\n"
+"<body>\n"
+"\t<div class=\"wrap\">\n"
+"\t\t<h1>Fonera Failsafe UI</h1>\n"
+"\t\t<h2>404 - file not found</h2>\n"
+"\t</div>\n"
+"</body>\n"
 "</html>\n";
 
 static const char data_index_html[] =
@@ -54,39 +116,177 @@ static const char data_index_html[] =
 "Content-type: text/html\n"
 "\n"
 "<html>\n"
-"\t<head>\n"
-"\t\t<title>\n"
-"\t\t\tFonera Failsafe UI\n"
-"\t\t</title>\n"
-"\t</head>\n"
-"\t<body style=\"margin: 0pt auto; height:100%; color: #000; background-color: #fbb034;\">\n"
+"<head>\n"
+"\t<title>Fonera Failsafe UI</title>\n"
+"\t<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"main.css\"/>\n"
+"</head>\n"
+"<body>\n"
+"\t<div class=\"wrap\">\n"
 "\t\t<h1>Fonera Failsafe UI</h1>\n"
 "\t\t<form method=\"post\" enctype=\"multipart/form-data\">\n"
 "\t\t\t<input type=file name=firmware>\n"
 "\t\t\t<input type=submit>\n"
 "\t\t</form>\n"
-"\t</body style=\"margin: 0pt auto; height:100%; color: #000; background-color: #fbb034;\">\n"
+"\t</div>\n"
+"</body>\n"
 "</html>\n";
 
-static const char data_flash_html[] =
+static const char data_main_css[] =
 "HTTP/1.0 200 OK\n"
 "Server: uIP/0.9 (http://dunkels.com/adam/uip/)\n"
-"Content-type: text/html\n"
+"Content-type: text/css\n"
 "\n"
-"<html>\n"
-"\t<head>\n"
-"\t\t<title>\n"
-"\t\t\tFonera Failsafe UI\n"
-"\t\t</title>\n"
-"\t</head>\n"
-"\t<body style=\"margin: 0pt auto; height:100%; color: #000; background-color: #fbb034;\">\n"
-"\t\t<h1>Flashing...</h1>\n"
-"\t\tThe system is now trying to flash. If there is a problem, the LEDs will "
-"start to blink.<br>\n"
+"* { margin: 0; padding: 0; }\n"
+"html, body, object, iframe, h1, h2, h3, h4, select, h5, h6, p, blockquote, pre, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, input, table, caption, tbody, tfoot, thead, tr, th, td, textarea {\n"
+"\tmargin: 0;\n"
+"\tpadding: 0;\n"
+"\tborder: 0;\n"
+"\t}\n"
+"ul, li {list-style-type: none;}\n"
+"article, aside, details, figcaption, figure, footer, header, hgroup, nav, section { display: block;}\n"
+"audio[controls], canvas, video { display: inline-block; *display: inline; *zoom: 1;}\n"
+"a {color: inherit; text-decoration: none;}\n"
+"body {\n"
+"\tbackground:#f0eee1;\t\n"
+"\ttext-align:center;\n"
+"\tfont-family:Tahoma, Geneva, sans-serif;\n"
+"\tfont-size:100%;\n"
+"\tcolor:#333;\n"
+"\tmargin:0; \n"
+"\tpadding:0;\n"
+"}\n"
+".wrap {position:absolute; top:50%; left:50%; margin:-200px 0 0 -200px; width:400px; height:400px; background:url(logofon.png) no-repeat top center;}\n"
 "\n"
-"\t\tAfter a successful update the box will reboot\n"
-"\t</body style=\"margin: 0pt auto; height:100%; color: #000; background-color: #fbb034;\">\n"
-"</html>\n";
+"h1 {font-weight:400; color:#333; margin:150px auto 30px auto;}\n"
+"input[type=\"submit\"] {\n"
+"\tbackground: #feb22e; \n"
+"\tborder:0px;\n"
+"\tmargin:20px auto;\n"
+"\tcolor:#333;\n"
+"\tdisplay:block;\n"
+"\tfont-size:1.2em;\n"
+"\ttext-align:center;\n"
+"\ttext-transform:uppercase;\n"
+"\tpadding:14px 25px; \n"
+"\tcursor:pointer;\n"
+"\ttext-decoration:none;\n"
+"\ttransition:background 0.5s;\n"
+"\t-moz-transition:background 0.5s; \n"
+"\t-webkit-transition:background 0.5s;\n"
+"\t-o-transition:background 0.5s; \n"
+"\t-webkit-border-radius:5px; \n"
+"\t-moz-border-radius:5px; \n"
+"\tborder-radius:5px;\n"
+"}\n"
+"\n"
+"input[type=\"submit\"]:hover, .actionButton a:hover {background:#fcda81;}\n"
+"\n";
+
+static const char data_logo_png[] = {
+0x48,0x54, 0x54, 0x50, 0x2F, 0x31, 0x2E, 0x30, 0x20, 0x32, 0x30, 0x30, 0x20, 0x4F, 0x4B, 0x0A, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x3A, 0x20, 0x75, 0x49, 0x50, 0x2F, 0x30, 0x2E, 0x39, 0x20,
+0x28,0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x64, 0x75, 0x6E, 0x6B, 0x65, 0x6C, 0x73, 0x2E, 0x63, 0x6F, 0x6D, 0x2F, 0x61, 0x64, 0x61, 0x6D, 0x2F, 0x75, 0x69, 0x70, 0x2F, 0x29, 0x0A, 0x43,
+0x6F,0x6E, 0x74, 0x65, 0x6E, 0x74, 0x2D, 0x74, 0x79, 0x70, 0x65, 0x3A, 0x20, 0x69, 0x6D, 0x61, 0x67, 0x65, 0x2F, 0x70, 0x6E, 0x67, 0x0A, 0x0A,
+0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D, 0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x83, 0x00, 0x00, 0x00, 0x4F, 0x08, 0x06, 0x00, 0x00, 0x00, 0xC8, 0xB7, 0x76,
+0xA9, 0x00, 0x00, 0x00, 0x19, 0x74, 0x45, 0x58, 0x74, 0x53, 0x6F, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x00, 0x41, 0x64, 0x6F, 0x62, 0x65, 0x20, 0x49, 0x6D, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61,
+0x64, 0x79, 0x71, 0xC9, 0x65, 0x3C, 0x00, 0x00, 0x04, 0xA0, 0x69, 0x54, 0x58, 0x74, 0x58, 0x4D, 0x4C, 0x3A, 0x63, 0x6F, 0x6D, 0x2E, 0x61, 0x64, 0x6F, 0x62, 0x65, 0x2E, 0x78, 0x6D, 0x70, 0x00, 
+0x00, 0x00, 0x00, 0x00, 0x3C, 0x3F, 0x78, 0x70, 0x61, 0x63, 0x6B, 0x65, 0x74, 0x20, 0x62, 0x65, 0x67, 0x69, 0x6E, 0x3D, 0x22, 0xEF, 0xBB, 0xBF, 0x22, 0x20, 0x69, 0x64, 0x3D, 0x22, 0x57, 0x35, 
+0x4D, 0x30, 0x4D, 0x70, 0x43, 0x65, 0x68, 0x69, 0x48, 0x7A, 0x72, 0x65, 0x53, 0x7A, 0x4E, 0x54, 0x63, 0x7A, 0x6B, 0x63, 0x39, 0x64, 0x22, 0x3F, 0x3E, 0x20, 0x3C, 0x78, 0x3A, 0x78, 0x6D, 0x70, 
+0x6D, 0x65, 0x74, 0x61, 0x20, 0x78, 0x6D, 0x6C, 0x6E, 0x73, 0x3A, 0x78, 0x3D, 0x22, 0x61, 0x64, 0x6F, 0x62, 0x65, 0x3A, 0x6E, 0x73, 0x3A, 0x6D, 0x65, 0x74, 0x61, 0x2F, 0x22, 0x20, 0x78, 0x3A, 
+0x78, 0x6D, 0x70, 0x74, 0x6B, 0x3D, 0x22, 0x41, 0x64, 0x6F, 0x62, 0x65, 0x20, 0x58, 0x4D, 0x50, 0x20, 0x43, 0x6F, 0x72, 0x65, 0x20, 0x35, 0x2E, 0x30, 0x2D, 0x63, 0x30, 0x36, 0x30, 0x20, 0x36, 
+0x31, 0x2E, 0x31, 0x33, 0x34, 0x37, 0x37, 0x37, 0x2C, 0x20, 0x32, 0x30, 0x31, 0x30, 0x2F, 0x30, 0x32, 0x2F, 0x31, 0x32, 0x2D, 0x31, 0x37, 0x3A, 0x33, 0x32, 0x3A, 0x30, 0x30, 0x20, 0x20, 0x20, 
+0x20, 0x20, 0x20, 0x20, 0x20, 0x22, 0x3E, 0x20, 0x3C, 0x72, 0x64, 0x66, 0x3A, 0x52, 0x44, 0x46, 0x20, 0x78, 0x6D, 0x6C, 0x6E, 0x73, 0x3A, 0x72, 0x64, 0x66, 0x3D, 0x22, 0x68, 0x74, 0x74, 0x70, 
+0x3A, 0x2F, 0x2F, 0x77, 0x77, 0x77, 0x2E, 0x77, 0x33, 0x2E, 0x6F, 0x72, 0x67, 0x2F, 0x31, 0x39, 0x39, 0x39, 0x2F, 0x30, 0x32, 0x2F, 0x32, 0x32, 0x2D, 0x72, 0x64, 0x66, 0x2D, 0x73, 0x79, 0x6E, 
+0x74, 0x61, 0x78, 0x2D, 0x6E, 0x73, 0x23, 0x22, 0x3E, 0x20, 0x3C, 0x72, 0x64, 0x66, 0x3A, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6F, 0x6E, 0x20, 0x72, 0x64, 0x66, 0x3A, 0x61, 
+0x62, 0x6F, 0x75, 0x74, 0x3D, 0x22, 0x22, 0x20, 0x78, 0x6D, 0x6C, 0x6E, 0x73, 0x3A, 0x78, 0x6D, 0x70, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x3D, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 
+0x6E, 0x73, 0x2E, 0x61, 0x64, 0x6F, 0x62, 0x65, 0x2E, 0x63, 0x6F, 0x6D, 0x2F, 0x78, 0x61, 0x70, 0x2F, 0x31, 0x2E, 0x30, 0x2F, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x2F, 0x22, 0x20, 0x78, 0x6D, 
+0x6C, 0x6E, 0x73, 0x3A, 0x78, 0x6D, 0x70, 0x4D, 0x4D, 0x3D, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x6E, 0x73, 0x2E, 0x61, 0x64, 0x6F, 0x62, 0x65, 0x2E, 0x63, 0x6F, 0x6D, 0x2F, 0x78, 
+0x61, 0x70, 0x2F, 0x31, 0x2E, 0x30, 0x2F, 0x6D, 0x6D, 0x2F, 0x22, 0x20, 0x78, 0x6D, 0x6C, 0x6E, 0x73, 0x3A, 0x73, 0x74, 0x52, 0x65, 0x66, 0x3D, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 
+0x6E, 0x73, 0x2E, 0x61, 0x64, 0x6F, 0x62, 0x65, 0x2E, 0x63, 0x6F, 0x6D, 0x2F, 0x78, 0x61, 0x70, 0x2F, 0x31, 0x2E, 0x30, 0x2F, 0x73, 0x54, 0x79, 0x70, 0x65, 0x2F, 0x52, 0x65, 0x73, 0x6F, 0x75, 
+0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x23, 0x22, 0x20, 0x78, 0x6D, 0x6C, 0x6E, 0x73, 0x3A, 0x78, 0x6D, 0x70, 0x3D, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x6E, 0x73, 0x2E, 0x61, 0x64, 
+0x6F, 0x62, 0x65, 0x2E, 0x63, 0x6F, 0x6D, 0x2F, 0x78, 0x61, 0x70, 0x2F, 0x31, 0x2E, 0x30, 0x2F, 0x22, 0x20, 0x78, 0x6D, 0x6C, 0x6E, 0x73, 0x3A, 0x64, 0x63, 0x3D, 0x22, 0x68, 0x74, 0x74, 0x70, 
+0x3A, 0x2F, 0x2F, 0x70, 0x75, 0x72, 0x6C, 0x2E, 0x6F, 0x72, 0x67, 0x2F, 0x64, 0x63, 0x2F, 0x65, 0x6C, 0x65, 0x6D, 0x65, 0x6E, 0x74, 0x73, 0x2F, 0x31, 0x2E, 0x31, 0x2F, 0x22, 0x20, 0x78, 0x6D, 
+0x70, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x3A, 0x4D, 0x61, 0x72, 0x6B, 0x65, 0x64, 0x3D, 0x22, 0x46, 0x61, 0x6C, 0x73, 0x65, 0x22, 0x20, 0x78, 0x6D, 0x70, 0x4D, 0x4D, 0x3A, 0x4F, 0x72, 0x69, 
+0x67, 0x69, 0x6E, 0x61, 0x6C, 0x44, 0x6F, 0x63, 0x75, 0x6D, 0x65, 0x6E, 0x74, 0x49, 0x44, 0x3D, 0x22, 0x78, 0x6D, 0x70, 0x2E, 0x64, 0x69, 0x64, 0x3A, 0x39, 0x39, 0x30, 0x33, 0x39, 0x41, 0x42, 
+0x32, 0x30, 0x32, 0x33, 0x37, 0x44, 0x45, 0x31, 0x31, 0x38, 0x45, 0x31, 0x36, 0x45, 0x34, 0x36, 0x37, 0x37, 0x44, 0x34, 0x44, 0x37, 0x31, 0x39, 0x46, 0x22, 0x20, 0x78, 0x6D, 0x70, 0x4D, 0x4D, 
+0x3A, 0x44, 0x6F, 0x63, 0x75, 0x6D, 0x65, 0x6E, 0x74, 0x49, 0x44, 0x3D, 0x22, 0x78, 0x6D, 0x70, 0x2E, 0x64, 0x69, 0x64, 0x3A, 0x45, 0x37, 0x44, 0x39, 0x37, 0x35, 0x30, 0x39, 0x33, 0x37, 0x42, 
+0x34, 0x31, 0x31, 0x45, 0x32, 0x41, 0x46, 0x33, 0x39, 0x39, 0x31, 0x38, 0x42, 0x35, 0x30, 0x33, 0x33, 0x35, 0x45, 0x45, 0x42, 0x22, 0x20, 0x78, 0x6D, 0x70, 0x4D, 0x4D, 0x3A, 0x49, 0x6E, 0x73, 
+0x74, 0x61, 0x6E, 0x63, 0x65, 0x49, 0x44, 0x3D, 0x22, 0x78, 0x6D, 0x70, 0x2E, 0x69, 0x69, 0x64, 0x3A, 0x45, 0x37, 0x44, 0x39, 0x37, 0x35, 0x30, 0x38, 0x33, 0x37, 0x42, 0x34, 0x31, 0x31, 0x45, 
+0x32, 0x41, 0x46, 0x33, 0x39, 0x39, 0x31, 0x38, 0x42, 0x35, 0x30, 0x33, 0x33, 0x35, 0x45, 0x45, 0x42, 0x22, 0x20, 0x78, 0x6D, 0x70, 0x3A, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6F, 0x72, 0x54, 0x6F, 
+0x6F, 0x6C, 0x3D, 0x22, 0x41, 0x64, 0x6F, 0x62, 0x65, 0x20, 0x50, 0x68, 0x6F, 0x74, 0x6F, 0x73, 0x68, 0x6F, 0x70, 0x20, 0x43, 0x53, 0x35, 0x20, 0x4D, 0x61, 0x63, 0x69, 0x6E, 0x74, 0x6F, 0x73, 
+0x68, 0x22, 0x3E, 0x20, 0x3C, 0x78, 0x6D, 0x70, 0x4D, 0x4D, 0x3A, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x46, 0x72, 0x6F, 0x6D, 0x20, 0x73, 0x74, 0x52, 0x65, 0x66, 0x3A, 0x69, 0x6E, 0x73, 
+0x74, 0x61, 0x6E, 0x63, 0x65, 0x49, 0x44, 0x3D, 0x22, 0x78, 0x6D, 0x70, 0x2E, 0x69, 0x69, 0x64, 0x3A, 0x30, 0x31, 0x38, 0x30, 0x31, 0x31, 0x37, 0x34, 0x30, 0x37, 0x32, 0x30, 0x36, 0x38, 0x31, 
+0x31, 0x42, 0x32, 0x44, 0x37, 0x46, 0x38, 0x37, 0x38, 0x30, 0x36, 0x35, 0x43, 0x34, 0x31, 0x45, 0x38, 0x22, 0x20, 0x73, 0x74, 0x52, 0x65, 0x66, 0x3A, 0x64, 0x6F, 0x63, 0x75, 0x6D, 0x65, 0x6E, 
+0x74, 0x49, 0x44, 0x3D, 0x22, 0x78, 0x6D, 0x70, 0x2E, 0x64, 0x69, 0x64, 0x3A, 0x39, 0x39, 0x30, 0x33, 0x39, 0x41, 0x42, 0x32, 0x30, 0x32, 0x33, 0x37, 0x44, 0x45, 0x31, 0x31, 0x38, 0x45, 0x31, 
+0x36, 0x45, 0x34, 0x36, 0x37, 0x37, 0x44, 0x34, 0x44, 0x37, 0x31, 0x39, 0x46, 0x22, 0x2F, 0x3E, 0x20, 0x3C, 0x64, 0x63, 0x3A, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x3E, 0x20, 0x3C, 0x72, 0x64, 
+0x66, 0x3A, 0x41, 0x6C, 0x74, 0x3E, 0x20, 0x3C, 0x72, 0x64, 0x66, 0x3A, 0x6C, 0x69, 0x20, 0x78, 0x6D, 0x6C, 0x3A, 0x6C, 0x61, 0x6E, 0x67, 0x3D, 0x22, 0x78, 0x2D, 0x64, 0x65, 0x66, 0x61, 0x75, 
+0x6C, 0x74, 0x22, 0x3E, 0x57, 0x41, 0x57, 0x41, 0x41, 0x20, 0x40, 0x20, 0x57, 0x61, 0x72, 0x65, 0x7A, 0x2D, 0x62, 0x62, 0x3C, 0x2F, 0x72, 0x64, 0x66, 0x3A, 0x6C, 0x69, 0x3E, 0x20, 0x3C, 0x2F, 
+0x72, 0x64, 0x66, 0x3A, 0x41, 0x6C, 0x74, 0x3E, 0x20, 0x3C, 0x2F, 0x64, 0x63, 0x3A, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x3E, 0x20, 0x3C, 0x64, 0x63, 0x3A, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6F, 
+0x72, 0x3E, 0x20, 0x3C, 0x72, 0x64, 0x66, 0x3A, 0x53, 0x65, 0x71, 0x3E, 0x20, 0x3C, 0x72, 0x64, 0x66, 0x3A, 0x6C, 0x69, 0x3E, 0x50, 0x68, 0x6F, 0x74, 0x6F, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 
+0x72, 0x3A, 0x20, 0x44, 0x69, 0x72, 0x6B, 0x20, 0x48, 0x61, 0x72, 0x64, 0x79, 0x3C, 0x2F, 0x72, 0x64, 0x66, 0x3A, 0x6C, 0x69, 0x3E, 0x20, 0x3C, 0x2F, 0x72, 0x64, 0x66, 0x3A, 0x53, 0x65, 0x71, 
+0x3E, 0x20, 0x3C, 0x2F, 0x64, 0x63, 0x3A, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6F, 0x72, 0x3E, 0x20, 0x3C, 0x2F, 0x72, 0x64, 0x66, 0x3A, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6F, 
+0x6E, 0x3E, 0x20, 0x3C, 0x2F, 0x72, 0x64, 0x66, 0x3A, 0x52, 0x44, 0x46, 0x3E, 0x20, 0x3C, 0x2F, 0x78, 0x3A, 0x78, 0x6D, 0x70, 0x6D, 0x65, 0x74, 0x61, 0x3E, 0x20, 0x3C, 0x3F, 0x78, 0x70, 0x61, 
+0x63, 0x6B, 0x65, 0x74, 0x20, 0x65, 0x6E, 0x64, 0x3D, 0x22, 0x72, 0x22, 0x3F, 0x3E, 0x95, 0xD5, 0x85, 0x2B, 0x00, 0x00, 0x07, 0x58, 0x49, 0x44, 0x41, 0x54, 0x78, 0xDA, 0xEC, 0x9D, 0x3D, 0x72, 
+0xEB, 0x36, 0x10, 0x80, 0x61, 0x8F, 0x27, 0x55, 0x66, 0xEC, 0x97, 0x0B, 0x98, 0x7D, 0x0A, 0xE9, 0x06, 0xE6, 0xEB, 0xDE, 0x9B, 0x14, 0x56, 0x4E, 0x60, 0xBD, 0x36, 0x4D, 0xE4, 0x5C, 0xC0, 0xF4, 
+0x05, 0x62, 0xB9, 0x49, 0x6B, 0xFA, 0x04, 0x91, 0x8B, 0xCC, 0x4B, 0x67, 0xE8, 0x04, 0xA1, 0x8A, 0xD4, 0x26, 0x2F, 0x90, 0x91, 0x66, 0x52, 0xA5, 0x88, 0xB3, 0xAB, 0x59, 0xC6, 0x1C, 0x3E, 0x91, 
+0x5C, 0x90, 0x00, 0x09, 0xD9, 0xBB, 0x33, 0x18, 0xFD, 0x98, 0x22, 0x41, 0xEC, 0x87, 0xC5, 0xEE, 0x02, 0xA0, 0x0F, 0x94, 0x88, 0x57, 0xF2, 0xFC, 0xA7, 0x0A, 0xE0, 0x25, 0x84, 0x32, 0xA6, 0x82, 
+0x9F, 0x4F, 0x1B, 0x7E, 0x96, 0x41, 0x49, 0xA1, 0x24, 0x54, 0xF4, 0xC1, 0xB7, 0xDB, 0xCF, 0x46, 0x72, 0x20, 0xCD, 0xEF, 0x0D, 0x00, 0x33, 0x28, 0x13, 0x86, 0xE2, 0xB9, 0xB2, 0x82, 0x12, 0x43, 
+0x59, 0x70, 0xC1, 0x10, 0x18, 0x86, 0x85, 0x00, 0x2D, 0x40, 0x04, 0xE5, 0xCC, 0xF1, 0xA5, 0xEE, 0xF1, 0x3A, 0x4D, 0x50, 0x08, 0x0C, 0xC3, 0x40, 0x70, 0x02, 0x2F, 0x73, 0x28, 0x17, 0x3D, 0x5F, 
+0xFA, 0x1A, 0x80, 0x88, 0x04, 0x06, 0x7F, 0x40, 0x40, 0x3F, 0x60, 0x61, 0x71, 0x38, 0x68, 0x33, 0x7C, 0x84, 0x00, 0xC5, 0x5A, 0x60, 0x18, 0x1E, 0x04, 0x0D, 0xE5, 0x78, 0xE0, 0xAA, 0x6C, 0x08, 
+0x88, 0x44, 0x60, 0x78, 0xDB, 0x20, 0x14, 0x81, 0x08, 0x8A, 0x16, 0xE2, 0x50, 0xD4, 0xD4, 0x9B, 0x8F, 0xE0, 0x13, 0x08, 0x8A, 0xEA, 0xA2, 0x8B, 0x5F, 0x08, 0x0C, 0xFD, 0x48, 0x6C, 0x09, 0x04, 
+0x1C, 0xEF, 0x97, 0x54, 0x32, 0x0B, 0xE7, 0x1B, 0x01, 0xA8, 0x91, 0x0C, 0x13, 0xFD, 0x86, 0x8F, 0x8F, 0x06, 0xCA, 0xC6, 0x71, 0x3C, 0xA5, 0x5E, 0xBB, 0x2E, 0x8F, 0xEB, 0x0D, 0xD7, 0x41, 0x0B, 
+0x34, 0x2E, 0x14, 0x8E, 0x93, 0x8A, 0xC3, 0xC5, 0x18, 0xC3, 0x4E, 0x81, 0xC1, 0x3D, 0x0C, 0xBA, 0x26, 0x8F, 0xB0, 0x22, 0xA5, 0x63, 0x62, 0x48, 0x3B, 0x1A, 0x9E, 0x10, 0x92, 0x09, 0xBD, 0x56, 
+0xC1, 0x71, 0x0B, 0xD7, 0x9F, 0x09, 0x0C, 0x6E, 0x41, 0x08, 0xE0, 0xE5, 0xA9, 0xF4, 0x75, 0x46, 0x39, 0x86, 0x45, 0x9B, 0x94, 0xB1, 0x05, 0x27, 0x76, 0x4A, 0xA5, 0x38, 0x6C, 0x6D, 0xA0, 0x2E, 
+0x27, 0x02, 0x83, 0xDB, 0xC6, 0x47, 0xA5, 0xFF, 0x48, 0x1F, 0x31, 0x0B, 0x18, 0xBB, 0xB0, 0x00, 0x2D, 0xEB, 0x96, 0x43, 0x91, 0x5B, 0xAD, 0xEF, 0x05, 0x06, 0xB7, 0x0D, 0x9E, 0x4F, 0x1C, 0x45, 
+0x7D, 0x5B, 0x01, 0x43, 0x9F, 0x26, 0x22, 0x3F, 0x45, 0xC4, 0xF1, 0x30, 0xB1, 0x37, 0x75, 0x15, 0xCB, 0xE0, 0xB1, 0xFC, 0xF3, 0xDB, 0xB6, 0xD7, 0x2A, 0x72, 0xFE, 0xAA, 0x64, 0x4D, 0xD6, 0x67, 
+0xFD, 0xD5, 0x77, 0xBC, 0xC8, 0xA3, 0x4A, 0x04, 0x06, 0x7F, 0x14, 0x3F, 0x26, 0xAF, 0xDF, 0x24, 0x2C, 0xAC, 0x0B, 0x4F, 0xB1, 0x2C, 0x00, 0x90, 0x54, 0x60, 0xD8, 0x0F, 0x00, 0x26, 0x04, 0xC0, 
+0x44, 0xB9, 0xCB, 0x4E, 0x62, 0xF4, 0x82, 0x13, 0x63, 0x71, 0x93, 0xE5, 0x10, 0x18, 0xFA, 0x07, 0x20, 0x28, 0x84, 0x77, 0x7D, 0xCF, 0x5C, 0x66, 0xE4, 0x2C, 0xA2, 0xC5, 0x90, 0x59, 0xCB, 0x81, 
+0x21, 0x40, 0x45, 0x5C, 0x78, 0x50, 0x1D, 0xCC, 0x3A, 0x62, 0xD8, 0x3B, 0x2F, 0x42, 0x21, 0x30, 0xB8, 0x87, 0x60, 0xA8, 0x85, 0x2C, 0x6C, 0x28, 0x00, 0x88, 0x48, 0x60, 0x70, 0x0F, 0xC2, 0x8C, 
+0xAC, 0xC1, 0xB1, 0xE7, 0x55, 0xC5, 0xE1, 0x63, 0x2A, 0x30, 0xB8, 0x0D, 0x0B, 0x1F, 0xF7, 0xA9, 0xCE, 0x32, 0x85, 0xED, 0x4E, 0x92, 0x3D, 0xAB, 0x6F, 0x26, 0x96, 0xC1, 0xAD, 0x75, 0x40, 0x20, 
+0x46, 0x1D, 0x4E, 0x81, 0x39, 0x03, 0x74, 0xF0, 0x74, 0xE1, 0xBB, 0xFC, 0x7D, 0x58, 0xF8, 0x0E, 0xDF, 0x07, 0x1D, 0xA3, 0x93, 0xFB, 0x23, 0x51, 0x99, 0x53, 0x59, 0x18, 0xC2, 0x90, 0xE7, 0x04, 
+0x30, 0xF4, 0xD3, 0x0D, 0xC7, 0xEA, 0x0A, 0x67, 0x35, 0x54, 0xCD, 0x53, 0xD6, 0x3B, 0xEB, 0x2A, 0x96, 0xC1, 0x7D, 0x38, 0xF9, 0xC4, 0xF0, 0xE8, 0x63, 0xC5, 0x48, 0x0A, 0xB5, 0xF4, 0x5B, 0xA6, 
+0x8C, 0x48, 0x66, 0x03, 0xD7, 0x96, 0x29, 0xEC, 0x1E, 0x80, 0xC0, 0x9E, 0x7E, 0xCE, 0x8D, 0xF5, 0x1D, 0x86, 0xB7, 0x33, 0x2A, 0xBB, 0x22, 0x9B, 0x6B, 0x0C, 0x2F, 0x05, 0x86, 0x61, 0xA2, 0x8A, 
+0xEB, 0x3E, 0x20, 0xA8, 0x80, 0x62, 0x57, 0xCE, 0xE3, 0x5D, 0xDF, 0x75, 0x79, 0xCB, 0x40, 0x68, 0x28, 0xCF, 0xF4, 0x1A, 0xF8, 0x00, 0x28, 0x94, 0x94, 0xEA, 0x14, 0x89, 0x86, 0xFA, 0x6D, 0xFC, 
+0xB1, 0x6F, 0x8D, 0x8E, 0x56, 0x02, 0xCA, 0x9C, 0xAC, 0xC5, 0x56, 0x1A, 0x87, 0x89, 0x8F, 0x1F, 0x3F, 0x04, 0x05, 0xEF, 0x14, 0x7F, 0xD8, 0xB4, 0x49, 0x74, 0x59, 0x78, 0x9F, 0x7E, 0xFE, 0xFC, 
+0xFB, 0x54, 0x70, 0x30, 0x97, 0xBF, 0x7F, 0xD9, 0x4E, 0x63, 0x87, 0x0D, 0xED, 0xBE, 0x51, 0x2F, 0xAB, 0xA9, 0xB7, 0x5B, 0xF1, 0xBF, 0xFE, 0xA1, 0xBD, 0x13, 0x7A, 0x50, 0x03, 0x01, 0x56, 0x22, 
+0x52, 0xDD, 0x76, 0x08, 0x2F, 0x01, 0x86, 0x50, 0x54, 0x6B, 0x04, 0x40, 0xBE, 0x35, 0xBF, 0x6D, 0x0A, 0x3B, 0xCB, 0xA3, 0x13, 0x00, 0x23, 0x35, 0xF9, 0xE1, 0xD1, 0x0E, 0x08, 0x4E, 0xE8, 0x64, 
+0xE7, 0x16, 0xEE, 0x4F, 0x8B, 0x8A, 0x59, 0x10, 0xD8, 0xE8, 0x78, 0xB9, 0x60, 0x6E, 0xE1, 0x0A, 0x0B, 0x9C, 0x77, 0xBB, 0x15, 0x9F, 0x0B, 0xC5, 0x61, 0x09, 0x84, 0x31, 0x99, 0x9B, 0x73, 0x4B, 
+0xF7, 0x99, 0x88, 0xAA, 0x6B, 0x21, 0x08, 0xA0, 0x2C, 0x28, 0xDA, 0x70, 0xF1, 0x8C, 0x06, 0x8C, 0x1A, 0x9E, 0xE0, 0x1A, 0x73, 0x28, 0x27, 0x6C, 0x18, 0xC8, 0x22, 0xD8, 0xDE, 0x2A, 0x2E, 0x96, 
+0xA1, 0x1A, 0x84, 0xA9, 0xE5, 0x8E, 0x57, 0x27, 0xB8, 0x5C, 0x3F, 0x21, 0x0B, 0xC4, 0xB2, 0x0C, 0xB1, 0x65, 0x10, 0x32, 0xF0, 0x17, 0x24, 0x76, 0xAD, 0xB0, 0x08, 0xF0, 0x72, 0xA7, 0xFA, 0x9D, 
+0xDA, 0x3E, 0xA5, 0xCE, 0x5E, 0x0F, 0x03, 0x39, 0x8B, 0xB6, 0x09, 0x15, 0xAB, 0x50, 0x21, 0x34, 0x86, 0x5F, 0x0E, 0x70, 0xE9, 0x09, 0xC7, 0x32, 0xB8, 0x88, 0x81, 0xC5, 0x5F, 0xA8, 0x07, 0x02, 
+0x33, 0x81, 0xF7, 0x3D, 0x5E, 0xF2, 0x12, 0xAE, 0x59, 0xDB, 0x41, 0x8F, 0x28, 0x8F, 0xD0, 0xD6, 0x79, 0x59, 0x96, 0x3E, 0x07, 0x85, 0xA1, 0x46, 0x2C, 0x43, 0xB3, 0x60, 0x18, 0x89, 0x4E, 0xBB, 
+0xC9, 0xCC, 0xE6, 0xA6, 0xC5, 0xF0, 0x72, 0x4F, 0xF0, 0x35, 0x86, 0x96, 0xA6, 0x79, 0x00, 0xA4, 0x79, 0x0E, 0xFE, 0x80, 0xF4, 0xFC, 0xEE, 0xD6, 0x61, 0x4D, 0x4E, 0x5D, 0x5A, 0xA1, 0xE0, 0xFF, 
+0xA7, 0xB4, 0xD1, 0xD2, 0xE2, 0xF1, 0x3B, 0x7C, 0x8F, 0x7C, 0xBF, 0x45, 0x55, 0x6E, 0x62, 0x45, 0xD0, 0x35, 0xCA, 0x01, 0x58, 0x86, 0x58, 0xF1, 0x17, 0x6B, 0x7E, 0x02, 0x08, 0x62, 0x51, 0xA3, 
+0x75, 0x87, 0xB2, 0xFC, 0x88, 0x9F, 0x15, 0xE5, 0x07, 0x16, 0x2D, 0x22, 0x94, 0xA8, 0x60, 0x9D, 0xB7, 0x8F, 0xEA, 0x29, 0x43, 0x54, 0xE7, 0x33, 0x04, 0x5C, 0x8B, 0x20, 0x20, 0x38, 0xB3, 0x10, 
+0x09, 0xF5, 0xDE, 0x0D, 0x8D, 0xED, 0x63, 0x53, 0x10, 0xE8, 0x3C, 0x31, 0x59, 0x8A, 0x5B, 0x3A, 0x57, 0xC8, 0x05, 0x21, 0xB7, 0x0C, 0xCF, 0xCC, 0x63, 0xDF, 0x03, 0x0C, 0xE2, 0x07, 0xB8, 0xB5, 
+0x10, 0x27, 0x26, 0xCA, 0x6B, 0x0A, 0x5F, 0x4D, 0xD3, 0xD1, 0x6C, 0x18, 0x00, 0x04, 0x59, 0xFB, 0xF0, 0xCA, 0x85, 0xBB, 0x3A, 0x3A, 0x93, 0xA6, 0x7A, 0xFD, 0xC2, 0x5D, 0x10, 0xBB, 0xA6, 0xC4, 
+0x14, 0x47, 0x70, 0xDA, 0xDA, 0xC8, 0x3C, 0xD1, 0x9C, 0x48, 0xA8, 0x5E, 0xA6, 0x6B, 0x77, 0xE5, 0x2C, 0xB6, 0xBB, 0x8A, 0x5D, 0x64, 0x35, 0xE9, 0xDE, 0xF2, 0x87, 0x63, 0xE5, 0xAF, 0x4D, 0xA2, 
+0xA9, 0x4E, 0xDA, 0x75, 0xA6, 0xF5, 0xAF, 0x9F, 0x0E, 0x43, 0xF5, 0xB2, 0x43, 0xBB, 0xDC, 0x2E, 0xF1, 0x37, 0x3F, 0xFF, 0x6B, 0x25, 0xB2, 0x33, 0xF1, 0x19, 0xD8, 0xC9, 0x0D, 0x68, 0x9C, 0x39, 
+0x43, 0x01, 0xD8, 0xE8, 0x53, 0x72, 0x9C, 0x4C, 0xD2, 0xE0, 0x0F, 0x14, 0xDA, 0xEA, 0x96, 0x8A, 0x0F, 0x0A, 0xE0, 0x99, 0xC6, 0xF8, 0x4E, 0xEA, 0x54, 0x03, 0x01, 0xD6, 0x0F, 0xDB, 0xF2, 0x8C, 
+0x71, 0xFD, 0x29, 0x40, 0xD1, 0x09, 0x4A, 0x17, 0x9B, 0x68, 0x34, 0x43, 0x21, 0x53, 0x8A, 0xAD, 0x6F, 0x94, 0xF9, 0x7C, 0x08, 0xA6, 0xCD, 0x1F, 0xE1, 0x1C, 0x9A, 0x2C, 0x8A, 0x09, 0x08, 0x18, 
+0x76, 0xE1, 0x6A, 0xE5, 0x3B, 0x0A, 0xA7, 0x47, 0x96, 0xEE, 0x39, 0xAF, 0xD3, 0x82, 0x20, 0xB7, 0x29, 0x9C, 0x84, 0x60, 0x95, 0x45, 0x1D, 0x16, 0x86, 0xBA, 0x64, 0x14, 0x36, 0x14, 0x36, 0x98, 
+0xB2, 0x33, 0x49, 0x83, 0x8D, 0xF4, 0x07, 0x81, 0xE5, 0x8B, 0x20, 0x14, 0x89, 0x29, 0xA4, 0x55, 0x42, 0xE6, 0xFF, 0x13, 0x07, 0x06, 0x38, 0x36, 0xF5, 0x0D, 0x86, 0x65, 0xC3, 0xB0, 0xA0, 0x95, 
+0xFD, 0x09, 0xB1, 0x3B, 0x4A, 0x9C, 0xF9, 0x22, 0x68, 0xE9, 0xB4, 0x2D, 0x0B, 0x01, 0x4A, 0xC6, 0x7B, 0xAB, 0x9B, 0xC3, 0xB8, 0xB4, 0xE5, 0x33, 0xD8, 0x86, 0x41, 0x37, 0x80, 0x30, 0x72, 0xA4, 
+0x80, 0x0B, 0xCF, 0x80, 0x40, 0xAB, 0xB7, 0xB0, 0x75, 0x32, 0x50, 0x36, 0x5A, 0xBF, 0xD5, 0x2E, 0x5F, 0x01, 0xFE, 0x36, 0xB7, 0x75, 0x1D, 0xDB, 0x30, 0x24, 0x35, 0x90, 0x8C, 0x1C, 0x2B, 0xE0, 
+0xC2, 0xB3, 0x21, 0xE3, 0xCC, 0x72, 0x7D, 0x30, 0x9A, 0xD8, 0x94, 0xC2, 0x7D, 0xAB, 0xF7, 0xEB, 0xDC, 0x32, 0x90, 0xD3, 0x36, 0xEA, 0x49, 0x01, 0x73, 0x8A, 0x16, 0x7C, 0x91, 0xC8, 0xA2, 0x75, 
+0x48, 0x4B, 0xE7, 0xEB, 0x1C, 0x3D, 0xB8, 0x84, 0xE1, 0x8B, 0x95, 0x4D, 0xA4, 0x98, 0xAB, 0x9E, 0xCD, 0xB3, 0x57, 0xFE, 0x83, 0x2D, 0x67, 0x92, 0x80, 0x98, 0x93, 0x5F, 0x76, 0x0B, 0xEF, 0xB5, 
+0xED, 0xCA, 0x72, 0x93, 0x4E, 0x19, 0xA3, 0x91, 0xD3, 0x8E, 0x3D, 0x23, 0xDF, 0x7B, 0x18, 0x17, 0x93, 0x56, 0xD0, 0x98, 0xF9, 0xF4, 0x2C, 0x77, 0x66, 0x15, 0xCD, 0x73, 0xD8, 0x31, 0xE6, 0x7F, 
+0xA0, 0xBA, 0x24, 0x45, 0xC0, 0x0B, 0x7B, 0x48, 0x6E, 0x0C, 0xCD, 0xBB, 0xCD, 0xE9, 0xFE, 0x99, 0x72, 0xF4, 0x34, 0x57, 0x2E, 0x0C, 0x98, 0x55, 0x34, 0x32, 0x79, 0xD4, 0x70, 0x5C, 0x05, 0xA2, 
+0xB7, 0x3C, 0xDB, 0x95, 0xC9, 0x83, 0xEF, 0xB6, 0xF3, 0xF9, 0xE4, 0x20, 0x2E, 0x98, 0x21, 0xE9, 0x4C, 0x75, 0x5B, 0x5C, 0x93, 0xEC, 0x82, 0x89, 0x20, 0xC5, 0xA1, 0x28, 0x31, 0xA8, 0x4B, 0x68, 
+0x53, 0x61, 0xB6, 0x22, 0x87, 0x5E, 0xF2, 0x0C, 0xA5, 0x1E, 0xC1, 0x02, 0x01, 0x77, 0x5D, 0x35, 0xA5, 0x74, 0x49, 0x39, 0x41, 0xC9, 0x89, 0xAA, 0x8C, 0xF7, 0x1D, 0x24, 0x7F, 0xCA, 0x75, 0xE1, 
+0x7A, 0xF1, 0x63, 0xB5, 0x27, 0xE2, 0x12, 0x06, 0x4E, 0x8F, 0xC8, 0x4C, 0xB6, 0xDF, 0x11, 0x30, 0x13, 0x8B, 0xD7, 0xEF, 0x22, 0x5C, 0xDF, 0xE4, 0x58, 0x60, 0xE0, 0x29, 0x63, 0xD6, 0xB2, 0x57, 
+0x2E, 0x87, 0xEE, 0x91, 0x34, 0x64, 0xB0, 0x66, 0x73, 0x0D, 0x26, 0xF9, 0x5E, 0x1F, 0x0C, 0x64, 0xA2, 0x9B, 0x7A, 0xC4, 0x86, 0xFC, 0x81, 0x56, 0x21, 0xA4, 0x07, 0x96, 0x41, 0xA9, 0x57, 0xF6, 
+0x58, 0x7E, 0x57, 0x96, 0x81, 0xD3, 0x2B, 0xBB, 0x38, 0x42, 0xB2, 0x18, 0x77, 0xCF, 0x86, 0x89, 0x26, 0x69, 0x9D, 0x30, 0x31, 0x5D, 0x2F, 0xE1, 0x50, 0x12, 0x81, 0xC1, 0x8E, 0xB4, 0xF6, 0xF6, 
+0x5D, 0x46, 0x0A, 0x7D, 0x01, 0xFD, 0x96, 0x60, 0xE0, 0xF4, 0xDC, 0xC0, 0xB1, 0x73, 0x2A, 0xE2, 0x03, 0x0C, 0x4C, 0x33, 0x7E, 0xDA, 0xC1, 0xCB, 0xE6, 0x84, 0x97, 0xE2, 0x57, 0x78, 0x34, 0x4C, 
+0x70, 0xC2, 0xBF, 0xA8, 0xC5, 0x10, 0x81, 0xCE, 0xE9, 0x85, 0xC0, 0xB0, 0x5F, 0x30, 0x68, 0xC6, 0x31, 0x38, 0x8F, 0x30, 0x33, 0x00, 0x21, 0x7F, 0xAA, 0x8C, 0xAD, 0xEB, 0x8B, 0xF4, 0x04, 0x03, 
+0x37, 0x87, 0x70, 0x43, 0xD3, 0xDC, 0x4D, 0x20, 0x04, 0x8A, 0xBF, 0x2E, 0x62, 0xE5, 0x51, 0xC4, 0x21, 0x30, 0xD0, 0x5A, 0xC8, 0x25, 0xF3, 0xF0, 0x2B, 0x9C, 0xFC, 0xA1, 0x19, 0xCA, 0x2F, 0x20, 
+0x20, 0x58, 0x4C, 0x1E, 0xCA, 0x3D, 0x17, 0xD5, 0x9A, 0x8B, 0xEB, 0x07, 0x89, 0xA3, 0x12, 0xB9, 0xFF, 0x73, 0x01, 0x15, 0xFD, 0x2B, 0x28, 0xBE, 0xE8, 0x6F, 0xA0, 0x35, 0x30, 0x5D, 0x3D, 0x9D, 
+0xC9, 0x9E, 0x50, 0x0F, 0xF3, 0x0C, 0x34, 0x8F, 0xF0, 0xD0, 0xE2, 0xA7, 0x67, 0x54, 0xDA, 0x3C, 0x56, 0x68, 0x2A, 0x6A, 0xF5, 0x10, 0x86, 0x82, 0x72, 0x36, 0x3D, 0xDD, 0xCF, 0xAD, 0x6C, 0x0E, 
+0xF6, 0x18, 0x06, 0x9A, 0x76, 0x0E, 0x7B, 0x00, 0x02, 0x9D, 0xC6, 0x99, 0xA8, 0xD4, 0x6F, 0xCB, 0x90, 0x3B, 0x93, 0x2E, 0x81, 0x58, 0x29, 0xC9, 0x4A, 0xEE, 0x07, 0x0C, 0x8E, 0x81, 0xC0, 0x25, 
+0x73, 0xA1, 0x3C, 0x66, 0x70, 0x8F, 0x60, 0x28, 0x00, 0x11, 0x28, 0x3B, 0x4F, 0x39, 0xDB, 0x3E, 0xE5, 0x84, 0xB3, 0x64, 0x4E, 0xC4, 0x43, 0x18, 0x72, 0x1F, 0x82, 0x96, 0xBA, 0xBD, 0x6F, 0x19, 
+0x69, 0x20, 0x04, 0xF8, 0xCF, 0x3B, 0x02, 0xCE, 0x6E, 0x6F, 0x11, 0xB3, 0x3C, 0xC3, 0x35, 0xE3, 0xB8, 0xD4, 0x51, 0xD8, 0xA9, 0x4B, 0xFF, 0xC2, 0x00, 0x4B, 0xD5, 0x13, 0xCB, 0xF2, 0xE7, 0x33, 
+0x74, 0xD9, 0xB6, 0xA6, 0x07, 0x3A, 0x2E, 0xDD, 0x07, 0x18, 0xFE, 0x13, 0x60, 0x00, 0x6C, 0x3A, 0xBD, 0xCC, 0x54, 0x9E, 0x51, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4E, 0x44, 0xAE, 0x42, 
+0x60, 0x82, 	
+};
 
 const struct fsdata_file file_flashing_html[] =
 {{NULL, "/flashing.html", data_flashing_html, sizeof(data_flashing_html)}};
@@ -103,6 +303,18 @@ const struct fsdata_file file_index_html
 const struct fsdata_file file_flash_html[] =
 {{file_index_html, "/flash.html", data_flash_html, sizeof(data_flash_html)}};
 
-#define FS_ROOT file_flash_html
+const struct fsdata_file file_logo_png[] =
+{{file_flash_html, "/logofon.png", data_logo_png, sizeof(data_logo_png)}};
+
+const struct fsdata_file file_main_css[] =
+{{file_logo_png, "/main.css", data_main_css, sizeof(data_main_css)}};
+
+const struct fsdata_file file_lock_html[] =
+{{file_main_css, "/lock", data_lock_html, sizeof(data_lock_html)}};
+
+const struct fsdata_file file_unlock_html[] =
+{{file_lock_html, "/unlock", data_unlock_html, sizeof(data_unlock_html)}};
+
+#define FS_ROOT file_unlock_html
 
 #define FS_NUMFILES 5
Index: u-boot-2006-04-06-1725/net/uip-0.9/httpd.c
===================================================================
--- u-boot-2006-04-06-1725.orig/net/uip-0.9/httpd.c
+++ u-boot-2006-04-06-1725/net/uip-0.9/httpd.c
@@ -4,6 +4,8 @@
 #include "fsdata.h"
 #include <asm/addrspace.h>
 
+#include "../../include/common.h"
+
 #define HTTP_NONE		0
 #define HTTP_FILE		1
 #define HTTP_FIRMWARE		2
@@ -24,6 +26,8 @@ unsigned char *upload_data;
 extern ulong		NetBootFileXferSize;
 int upload_running = 0;
 
+extern unsigned char *fon_lock_flash_addr(void);
+
 #define ISO_G        0x47
 #define ISO_E        0x45
 #define ISO_T        0x54
@@ -70,7 +74,9 @@ void
 httpd_appcall(void)
 {
 	struct fs_file fsfile;
+	int index = 0;
 	u8_t i;
+	unsigned char *lock = fon_lock_flash_addr(); 
 	switch(uip_conn->lport) {
 	case HTONS(80):
 		hs = (struct httpd_state *)(uip_conn->appstate);
@@ -122,6 +128,19 @@ httpd_appcall(void)
 
 				PRINT("request for file ");
 				PRINTLN(&uip_appdata[4]);
+				if (!memcmp(&uip_appdata[4], "/unlock", 7)) {
+					PRINT("unlocking unit\n");
+					char command[256];
+					sprintf(command, "setenv lock 0x%x; cp.b ${lock} 0x80060000 0x10000; erase ${lock} +0x10000; mw.l 0x80060000 0x55555555; cp.b 0x80060000 ${lock} 0x10000", lock);
+					run_command(command, 0);
+					PRINT("unit unlocked\n");
+				} else if (!memcmp(&uip_appdata[4], "/lock", 5)) {
+					PRINT("locking unit\n");
+					char command[256];
+					sprintf(command, "setenv lock 0x%x; cp.b ${lock} 0x80060000 0x10000; erase ${lock} +0x10000; mw.l 0x80060000 0x4c4c4c4c; cp.b 0x80060000 ${lock} 0x10000", lock);
+					run_command(command, 0);
+					PRINT("unit locked\n");
+				}
 				if(uip_appdata[4] == ISO_slash &&
 					uip_appdata[5] == 0)
 				{
@@ -147,6 +166,13 @@ httpd_appcall(void)
 				unsigned char *boundary_start;
 				int i;
 				uip_appdata[uip_len] = '\0';
+
+				if (strstr((char *)start, "filename=\"\""))
+				{
+					index = 1;
+					goto out;
+				}
+
 				if(clen)
 				{
 					clen += sizeof("Content-Length:");
@@ -161,30 +187,30 @@ httpd_appcall(void)
 						if(!upload_data)
 						{
 							printf("failed to allocate memory\n");
-							uip_close();
-							return;
+							index = 1;
+							goto out;
 						}
 					} else {
-						uip_close();
-						return;
+						index = 1;
+						goto out;
 					}
 				}
 				if(len < 4 * 1024)
 				{
-					uip_close();
-					return;
+					index = 1;
+					goto out;
 				}
 				boundary_start = (unsigned char *)strstr((char *)next, "---");
 				if(!boundary_start)
 				{
-					uip_close();
-					return;
+					index = 1;
+					goto out;
 				}
 				end = (unsigned char *)strstr((char *)boundary_start, eol);
 				if(!end)
 				{
-					uip_close();
-					return;
+					index = 1;
+					goto out;
 				}
 				boundary_len = end - boundary_start;
 				memcpy(boundary, boundary_start, boundary_len);
@@ -192,15 +218,14 @@ httpd_appcall(void)
 				next = (unsigned char *)strstr((char *)boundary_start, "name=\"firmware\";");
 				if(!next)
 				{
-					uip_close();
-					return;
+					index = 1;
+					goto out;
 				}
 				next = (unsigned char *)strstr((char *)next, eol2);
 				if(!next)
 				{
-					printf("could not find start of data\n");
-					uip_close();
-					return;
+					index = 1;
+					goto out;
 				}
 				next += 4;
 				hs->script = 0;
@@ -217,7 +242,15 @@ httpd_appcall(void)
 				return;
 			}
 		}
-
+out:
+		if (index) {
+			fs_open(file_index_html.name, &fsfile);
+			hs->script = 0;
+			hs->state = HTTP_FILE;
+			hs->dataptr = fsfile.data;
+			hs->count = fsfile.len;
+			index = 0;
+		}
 		if(hs->state == HTTP_FIRMWARE)
 		{
 			if(uip_newdata())
Index: u-boot-2006-04-06-1725/net/net.c
===================================================================
--- u-boot-2006-04-06-1725.orig/net/net.c
+++ u-boot-2006-04-06-1725/net/net.c
@@ -1849,17 +1849,17 @@ ushort getenv_VLAN(char *var)
 int do_http_upgrade(const unsigned char *data, const ulong size)
 {
 	char buf[128];
+	int ret;
 
-	if(getenv ("ram_addr") == NULL)
+	if (size > CONFIG_MAX_FLASH)
 		return -1;
-	if(getenv ("kernel_addr") == NULL)
-		return -1;
-	/* check the image */
 
+	ret = rsa_check_signature(&data[4], 0x200, &data[516], size - 516);
+	printf("rsa: %d\n", ret);
 
 	/* write the image to the flash */
 	puts("http ugrade ...\n");
-	sprintf(buf, "era ${kernel_addr} +0x%x; cp.b ${ram_addr} ${kernel_addr} 0x%x", size, size);
+	sprintf(buf, "era 0x9f020000 +0x%x; cp.b 0x80060204 0x9f020000 0x%x", size - 516, size - 516);
 	run_command(buf, 0);
 	return 0;
 }
@@ -1905,12 +1905,7 @@ int do_http_progress(const int state)
 
 unsigned long do_http_tmp_address(void)
 {
-	char *s = getenv ("ram_addr");
-	if (s) {
-		ulong tmp = simple_strtoul (s, NULL, 16);
-		return tmp;
-	}
-	return 0 /*0x80a00000*/;
+	return 0x80060000;
 }
 
 void
@@ -1931,11 +1926,16 @@ NetSendHttpd(void)
 
 #define BUF ((struct uip_eth_hdr *)&uip_buf[0])
 
+static int got_data = 0;
+
 void
 NetReceiveHttpd(volatile uchar * inpkt, int len)
 {
 	memcpy(uip_buf, (const void *)inpkt, len);
 	uip_len = len;
+
+	got_data = 1;
+
 	if(BUF->type == htons(UIP_ETHTYPE_IP)) {
 		uip_arp_ipin();
 		uip_input();
@@ -1958,6 +1958,7 @@ NetLoopHttpd(void)
 	bd_t *bd = gd->bd;
 	unsigned short int ip[2];
 	struct uip_eth_addr eaddr;
+	int restart = 0;
 
 #ifdef CONFIG_NET_MULTI
 	NetRestarted = 0;
@@ -2062,6 +2063,7 @@ restart:
 	for (;;) {
 		unsigned long long t1;
 		int l = eth_rx();
+		int count = 0;
 
 		WATCHDOG_RESET();
 		if(l > 0) {
@@ -2071,6 +2073,13 @@ restart:
 			if(t1 - tout > 100000000) {
 				do_http_progress(HTTP_PROGRESS_TIMEOUT);
 				tout = t1;
+				restart++;
+				if (!got_data && (restart % 20 == 0)) {
+					if (!got_data) {
+						eth_halt();
+						eth_init(gd->bd);
+					}
+				}
 			}
 		}
 
@@ -2081,9 +2090,24 @@ restart:
 			return (-1);
 		}
 
-
 		if(!httpd_upload_complete)
 			continue;
+
+		while (count < 10) {
+			l = eth_rx();
+			WATCHDOG_RESET();
+			if(l > 0) {
+				HttpdHandler();
+			} else {
+				t1 = get_ticks();
+				if(t1 - tout > 200000000) {
+					do_http_progress(HTTP_PROGRESS_TIMEOUT);
+					tout = t1;
+					count++;
+				}
+			}
+		}
+
 		printf("Bytes transferred = %ld (%lx hex)\n",
 			NetBootFileXferSize,
 			NetBootFileXferSize);
Index: u-boot-2006-04-06-1725/board/ar7240/db12x/extra.c
===================================================================
--- u-boot-2006-04-06-1725.orig/board/ar7240/db12x/extra.c
+++ u-boot-2006-04-06-1725/board/ar7240/db12x/extra.c
@@ -93,3 +93,23 @@ void ath_set_tuning_caps(void)
 	printf("Setting 0xb8116290 to 0x%x\n", val);
 	return;
 }
+
+unsigned char *
+fon_lock_addr_loc(void)
+{
+	extern flash_info_t flash_info[];
+
+	/* lock magic number is stored in the at the beginning of the fon_data partition (second last sector) */
+	return ((unsigned char *) (KSEG1ADDR(AR7240_SPI_BASE) + 
+		flash_info[0].size - (2 * 64 * 1024) /* sector_size */ ));
+}
+
+unsigned char *
+fon_lock_flash_addr(void)
+{
+	extern flash_info_t flash_info[];
+
+	/* lock magic number is stored in the at the beginning of the fon_data partition (second last sector) */
+	return ((unsigned char *) (CFG_FLASH_BASE + 
+		flash_info[0].size - (2 * 64 * 1024) /* sector_size */ ));
+}
